class Solution:
    def minPathSum(self, grid: List[List[int]]) -> int:
        if not grid:
            return 0
        dp = [[float('inf') for _ in range(len(grid[0]))] for _ in range(len(grid))]
        dp[0][0] = grid[0][0]
        for x in range(len(grid)):
            for y in range(len(grid[0])):
                if x == 0 and y == 0:
                    continue
                elif x == 0:
                    dp[x][y] = dp[x][y-1] + grid[x][y]
                elif y == 0:
                    dp[x][y] = dp[x-1][y] + grid[x][y]
                else:
                    dp[x][y] = min(dp[x-1][y], dp[x][y-1]) + grid[x][y]
        return dp[x][y]
        
