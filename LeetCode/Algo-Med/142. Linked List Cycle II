# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def detectCycle(self, head: ListNode) -> ListNode:
        nodes_visited = set()
        curr = head
        while curr:
            if curr in nodes_visited:
                return curr
            nodes_visited.add(curr)
            curr = curr.next
        return None
