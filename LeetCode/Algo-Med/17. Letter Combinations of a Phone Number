class Solution:
    def letterCombinations(self, digits: str) -> List[str]:
        res = []
        digit_to_letter = {'2': 'abc', '3': 'def', '4': 'ghi',
                           '5': 'jkl', '6': 'mno', '7': 'pqrs',
                           '8': 'tuv', '9': 'wxyz'}
        if not digits:
            return res
        def dfs(digits_remaining, path):
            if len(path) == len(digits):
                res.append(path)
                return
            for i in range(len(digits_remaining)):
                for letter in digit_to_letter[digits_remaining[i]]:
                    dfs(digits_remaining[i+1:], path+letter)
        dfs(digits, '')
        return res
